{
    "version": "https://jsonfeed.org/version/1",
    "title": "无尽的博客",
    "description": "",
    "home_page_url": "https://wzxzzy.com",
    "items": [
        {
            "id": "https://wzxzzy.com/hello-world/",
            "url": "https://wzxzzy.com/hello-world/",
            "title": "Hello World",
            "date_published": "2021-10-31T03:04:52.937Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tA <span class=\"token arrow operator\">--></span> B<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tA <span class=\"token arrow operator\">--></span> B</pre></td></tr></table></figure><h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        },
        {
            "id": "https://wzxzzy.com/slam/SLAM%E5%8D%81%E5%9B%9B%E8%AE%B2%E7%AC%AC1-6%E7%AB%A0%E6%80%BB%E7%BB%93/",
            "url": "https://wzxzzy.com/slam/SLAM%E5%8D%81%E5%9B%9B%E8%AE%B2%E7%AC%AC1-6%E7%AB%A0%E6%80%BB%E7%BB%93/",
            "title": "SLAM十四讲第1-6章总结",
            "date_published": "2021-10-25T09:39:55.000Z",
            "content_html": "<h1 id=\"slam十四讲前三章总结\"><a class=\"anchor\" href=\"#slam十四讲前三章总结\">#</a> SLAM 十四讲前三章总结</h1>\n<h2 id=\"slam初识\"><a class=\"anchor\" href=\"#slam初识\">#</a> SLAM 初识</h2>\n<p>在学习 SLAM 之前应该具有线性代数的基础，并拥有虚拟机等模拟 Linux 的软件，并且由于 ROS 等机器人操作系统在 SLAM 领域中经常被使用，所以有一个稳定的代理能一直访问外网显得异常重要。</p>\n<p>相关的虚拟机配置将尽快做出更新（先挖个坑）。</p>\n<p>本文将梳理 SLAM 十四讲的全部内容，预计时间跨度会是两周的时间，加上网上高翔博士布置的相关作业，由于本人是刚入门的 SLAM，是边学边更新内容，后续有错误一定会随时更新博客，大佬勿喷哈。</p>\n<p>那么，接下来我将带着自己的理解，来撰写全部的全书总结。</p>\n<h2 id=\"slam第一章-第二章梳理\"><a class=\"anchor\" href=\"#slam第一章-第二章梳理\">#</a> SLAM 第一章、第二章梳理</h2>\n<p>本书在这两个章节中，简要的介绍了 SLAM 主要使用的是 C++，并适配在 Linux 系统中，编程时经常使用 CMake 工具来解决调用其他人 C++ 工程经历的冗杂导包的问题。</p>\n<p>接着深入介绍了 SLAM 主要解决的任务是<strong>机器人在实际运动中的定位问题，还有构建周边环境的问题</strong>，定位问题主要是机器人在实际运动中的路径决策问题，之前是否到达过该地点，这就像是图论问题中的搜索，机器人需要知道当前时间戳所在的位置，是否已经走过，这样可以避免在一个地方兜圈子。而建图问题就是机器人针对周边环境的识别能力。具体讲的就是，机器人是否能够通过当前环境的特征信息来识别出当前环境具体的构造，比如实际扫地机需要识别所在环境中所有的障碍物，从而实现精准避障。</p>\n<p>做个归纳：SLAM 就是解决机器人运动问题的任务。大致分为激光 SLAM 和 视觉 SLAM ，还有更多类型的分类和细节，会尽快详细更新。在以前获取周边环境信息的主流手段是激光雷达，但是最近几年随着深度学习的兴起，从经典的特征点提取到神经网络，之后再到卷积神经网络、残差网络、稠密网络和各种迁移学习所带来的特征学习难度的减小，最后到发文截至的这个时间点的 transformers，越来越多优秀的视觉模型展现出识别、检测和提取语义信息的超强能力。SLAM 也在飞速发展，这就引出了搭配相机的视觉 SLAM，还有多传感器融合，这展现出了 SLAM 的发展前景和潜力。</p>\n<h4 id=\"cmake使用如果安装了clion可能就不需要看这个了\"><a class=\"anchor\" href=\"#cmake使用如果安装了clion可能就不需要看这个了\">#</a> CMake 使用（如果安装了 CLion，可能就不需要看这个了）</h4>\n<p>首先需要清楚的是，CMake 的基本语法结构，详细 CMake 语法链接:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhaW5lR2F0ZXMvYXJ0aWNsZS9kZXRhaWxzLzEwODI0MjgwMw==\">https://blog.csdn.net/LaineGates/article/details/108242803</span></p>\n<p>我将在应用到 CMake 链接静态库和动态库时详细更新具体的书写方法（再挖个坑）。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Linux Ubantu 16.04 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 1、创建 C++ 工作区 (即工程文件夹，存放头文件、源码、数据等)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">mkdir</span> cppwork</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">cd</span> cppwork</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 2、书写 cpp 源文件 (创建文件还可以使用 touch main.cpp，可直接创建文件，但不会直接打开)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">vim</span> main.cpp</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 3、之后检查一下是否成功保存 (cat 会显示具体的文件内容)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">cat</span> main.cpp</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 4、创建 CMakeLists.txt</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">vim</span> CMakeLists.txt</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 5、创建 build 文件夹，这个文件夹用来存放 CMake 产生的附带垃圾文件</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">mkdir</span> build</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token builtin class-name\">cd</span> build</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 6、编译 CMake</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>cmake <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 7、运行 CMake</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr></table></figure><h2 id=\"slam第三章梳理\"><a class=\"anchor\" href=\"#slam第三章梳理\">#</a> SLAM 第三章梳理</h2>\n<p><img data-src=\"image-20211025203849116.png\" alt=\"image-20211025203849116\" /></p>\n<p>这里强调 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>^ = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> ^ <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">e</span></span></span></span> = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>×</mo><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">a \\times e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">e</span></span></span></span>，这个运算相当于一个向量和一个单位向量（基）做外积（即叉乘）。</p>\n<p>相当于一个反对称矩阵。</p>\n<h3 id=\"欧式变换\"><a class=\"anchor\" href=\"#欧式变换\">#</a> 欧式变换</h3>\n<p>欧式变换包括旋转和平移两个操作。</p>\n<p><img data-src=\"image-20211025205755061.png\" alt=\"image-20211025205755061\" /></p>\n<p>旋转矩阵：两个不同的坐标系基之间的乘法，所得到的是一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3\\times3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span> 的矩阵，这就代表着第一个坐标系的三个轴分别和第二个坐标系的三个轴之间的内积，也就是相应的余弦值，可以看作是 3 对旋转角。</p>\n<p>旋转矩阵的性质：行列式为 1 的正交矩阵也是一个旋转矩阵。</p>\n<p>特殊正交群：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>R</mi><mo>∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi mathvariant=\"double-struck\">n</mi><mo>×</mo><mi mathvariant=\"double-struck\">n</mi></mrow></msup><mi mathvariant=\"normal\">∣</mi><mi>R</mi><msup><mi>R</mi><mi>T</mi></msup><mo>=</mo><mi>I</mi><mo separator=\"true\">,</mo><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><mo fence=\"true\">}</mo></mrow></mrow><annotation encoding=\"application/x-tex\">SO(n)=\n\n\\begin{Bmatrix}\n\n{R\\in\\mathbb{R^{n\\times n}}|RR^T=I, det(R)=1}\n\n\\end{Bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.201331em;vertical-align:-0.3506655em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8506654999999999em;\"><span style=\"top:-3.0093345em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3506655em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">}</span></span></span></span></span></span></span></p>\n",
            "tags": []
        },
        {
            "id": "https://wzxzzy.com/acm/%E5%80%8D%E5%A2%9E%E7%AE%97%E6%B3%95/",
            "url": "https://wzxzzy.com/acm/%E5%80%8D%E5%A2%9E%E7%AE%97%E6%B3%95/",
            "title": "倍增算法",
            "date_published": "2021-10-25T03:23:51.000Z",
            "content_html": "<h1 id=\"倍增算法\"><a class=\"anchor\" href=\"#倍增算法\">#</a> 倍增算法</h1>\n<h2 id=\"倍增思想\"><a class=\"anchor\" href=\"#倍增思想\">#</a> 倍增思想</h2>\n<p>在算法竞赛中，有许多<strong>实时查询区间最值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>R</mi><mi>M</mi><mi>Q</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(RMQ)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">Q</span><span class=\"mclose\">)</span></span></span></span> 问题</strong>，比如，实时查询 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>l</mi><mo separator=\"true\">,</mo><mi>r</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[l,r]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mclose\">]</span></span></span></span> 最大值，最小值，还有可能是其他特殊需求，但共性是这些需求都是原操作（近似 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 级别的操作）。 这就需要倍增或者分块来大幅度降低时间复杂度。往往可以将复杂度为平方甚至更高的时间复杂度降低到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">log</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> 的级别。分块思想将在最近更新（先挖个坑）。</p>\n<p>如果对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">log</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> 没什么概念，可以类比一下：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> log<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>/log<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">10.0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> log<span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>/log<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">9.965784284662087</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> log<span class=\"token punctuation\">(</span><span class=\"token number\">10240</span><span class=\"token punctuation\">)</span>/log<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">13.321928094887364</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> log<span class=\"token punctuation\">(</span><span class=\"token number\">102400</span><span class=\"token punctuation\">)</span>/log<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">16.643856189774723</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> log<span class=\"token punctuation\">(</span><span class=\"token number\">1024000</span><span class=\"token punctuation\">)</span>/log<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">19.96578428466209</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> log<span class=\"token punctuation\">(</span><span class=\"token number\">10240000</span><span class=\"token punctuation\">)</span>/log<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">23.287712379549454</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> log<span class=\"token punctuation\">(</span><span class=\"token number\">102400000</span><span class=\"token punctuation\">)</span>/log<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">26.609640474436812</span></pre></td></tr></table></figure><ul>\n<li>综上，当一个数字超过 1000 之后，对其取 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">log</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> ，最多仅仅增长 20 倍，也就是增加一个 10 倍的数量级。<strong>这也是倍增和分块适用范围很广的原因！</strong></li>\n<li>时间复杂度介于高级数据结构（线段树，平衡树等对区间进行操作的数据结构）和朴素枚举算法之间，当一个问题的时间复杂度卡的不是很紧，且需要求解的问题过于单纯的时候，可直接用倍增解决。因为其编码难度和调试难度远低于数据结构，这也就导致倍增的编码时间比数据结构要短很多。</li>\n</ul>\n<h2 id=\"倍增需要解决的问题为什么需要倍增\"><a class=\"anchor\" href=\"#倍增需要解决的问题为什么需要倍增\">#</a> 倍增需要解决的问题（为什么需要倍增）</h2>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[1,n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span></span></span></span> 可以划分为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>N</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">N^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> 个不同的区间。</p>\n<p>为了便于分析时间复杂度，先列出倍增的通式：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>s</mi><mi>t</mi><mi>e</mi><mi>p</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>s</mi><mi>t</mi><mi>e</mi><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo>+</mo><msup><mn>2</mn><mrow><mi>s</mi><mi>t</mi><mi>e</mi><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup><mo separator=\"true\">,</mo><mi>s</mi><mi>t</mi><mi>e</mi><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(i,step)=max(F(i,step-1), F(i+2^{step-1}, step-1))\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.058548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.864108em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>t</mi><mi>e</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">step</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">p</span></span></span></span> 代表步长，每次从索引 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 走到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>+</mo><msup><mn>2</mn><mrow><mi>s</mi><mi>t</mi><mi>e</mi><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i+2^{step-1}-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>，再从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>+</mo><msup><mn>2</mn><mrow><mi>s</mi><mi>t</mi><mi>e</mi><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">i+2^{step-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">p</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span> 走到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>+</mo><msup><mn>2</mn><mrow><mi>s</mi><mi>t</mi><mi>e</mi><mi>p</mi></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i+2^{step}-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8768859999999999em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7935559999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>，也就是左闭右开区间的最值，可以看出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> 函数的第二个自变量，代表步长 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>t</mi><mi>e</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">step</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">p</span></span></span></span>，实际含义是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mrow><mi>s</mi><mi>t</mi><mi>e</mi><mi>p</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">2^{step}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7935559999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7935559999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span></span> 长度的步长，每次 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>t</mi><mi>e</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">step</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">p</span></span></span></span> 是该结点两次 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>t</mi><mi>e</mi><mi>p</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">step-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 的最值再取最值，这是在解的状态空间中不断成倍增加步长带来的枚举方式，因为前一次的状态是已经求解的，这里可类比动态规划的状态转移（当前状态是子状态的合并）。</p>\n<p>这里以实时查询区间最大值为例，先介绍一下倍增的实际操作流程：</p>\n<ol>\n<li>\n<p>每个结点，作为最初的数值，结点本身就是一个区间：</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tA<span class=\"token text string\">[1]</span> <span class=\"token arrow operator\">---</span> B<span class=\"token text string\">[2]</span> <span class=\"token arrow operator\">---</span> C<span class=\"token text string\">[4]</span> <span class=\"token arrow operator\">---</span> D<span class=\"token text string\">[8]</span> <span class=\"token arrow operator\">---</span> E<span class=\"token text string\">[16]</span> <span class=\"token arrow operator\">---</span> F<span class=\"token text string\">[32]</span> <span class=\"token arrow operator\">---</span> G<span class=\"token text string\">[64]</span> <span class=\"token arrow operator\">---</span> H<span class=\"token text string\">[128]</span></pre></td></tr></table></figure><figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tA</pre></td></tr></table></figure></li>\n<li>\n<p>每个结点和后边 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>0</mn></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">2^0=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个的结点合并，并取最大值：</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token text string\">[1,2]</span><span class=\"token arrow operator\">---</span>B<span class=\"token text string\">[2,4]</span><span class=\"token arrow operator\">---</span>C<span class=\"token text string\">[4,8]</span><span class=\"token arrow operator\">---</span>D<span class=\"token text string\">[8,16]</span><span class=\"token arrow operator\">---</span>E<span class=\"token text string\">[16,32]</span><span class=\"token arrow operator\">---</span>F<span class=\"token text string\">[32,64]</span><span class=\"token arrow operator\">---</span>G<span class=\"token text string\">[64,128]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>取最大值之后</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>A1<span class=\"token text string\">[2]</span><span class=\"token arrow operator\">---</span>B1<span class=\"token text string\">[4]</span><span class=\"token arrow operator\">---</span>C1<span class=\"token text string\">[8]</span><span class=\"token arrow operator\">---</span>D1<span class=\"token text string\">[16]</span><span class=\"token arrow operator\">---</span>E1<span class=\"token text string\">[32]</span><span class=\"token arrow operator\">---</span>F1<span class=\"token text string\">[64]</span><span class=\"token arrow operator\">---</span>G1<span class=\"token text string\">[128]</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>第 1 步</strong>的每个结点和后边 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>1</mn></msup><mo>=</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2^1=2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 个的结点合并，并取最大值：</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token text string\">[1,2 &amp;&amp; 4,8]</span><span class=\"token arrow operator\">---</span>B<span class=\"token text string\">[2,4 &amp;&amp; 8,16]</span><span class=\"token arrow operator\">---</span>C<span class=\"token text string\">[4,8 &amp;&amp; 16,32]</span><span class=\"token arrow operator\">---</span>D<span class=\"token text string\">[8,16 &amp;&amp; 32,64]</span><span class=\"token arrow operator\">---</span>E<span class=\"token text string\">[16,32 &amp;&amp; 64,128]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>k<span class=\"token text string\">[取最大值之后]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>A1<span class=\"token text string\">[8]</span><span class=\"token arrow operator\">---</span>B1<span class=\"token text string\">[16]</span><span class=\"token arrow operator\">---</span>C1<span class=\"token text string\">[32]</span><span class=\"token arrow operator\">---</span>D1<span class=\"token text string\">[64]</span><span class=\"token arrow operator\">---</span>E1<span class=\"token text string\">[128]</span></pre></td></tr></table></figure></li>\n<li>\n<p>以此递推，现列出整个流程图：</p>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token text string\">[1]</span><span class=\"token arrow operator\">---</span>B<span class=\"token text string\">[2]</span><span class=\"token arrow operator\">---</span>C<span class=\"token text string\">[4]</span><span class=\"token arrow operator\">---</span>D<span class=\"token text string\">[8]</span><span class=\"token arrow operator\">---</span>E<span class=\"token text string\">[16]</span><span class=\"token arrow operator\">---</span>F<span class=\"token text string\">[32]</span><span class=\"token arrow operator\">---</span>G<span class=\"token text string\">[64]</span><span class=\"token arrow operator\">---</span>H<span class=\"token text string\">[128]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>A1<span class=\"token text string\">[1,2]</span><span class=\"token arrow operator\">---</span>B1<span class=\"token text string\">[2,4]</span><span class=\"token arrow operator\">---</span>C1<span class=\"token text string\">[4,8]</span><span class=\"token arrow operator\">---</span>D1<span class=\"token text string\">[8,16]</span><span class=\"token arrow operator\">---</span>E1<span class=\"token text string\">[16,32]</span><span class=\"token arrow operator\">---</span>F1<span class=\"token text string\">[32,64]</span><span class=\"token arrow operator\">---</span>G1<span class=\"token text string\">[64,128]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>A<span class=\"token arrow operator\">--></span>A1 </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>B<span class=\"token arrow operator\">--></span>A1  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>B<span class=\"token arrow operator\">--></span>B1</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>C<span class=\"token arrow operator\">--></span>B1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>C<span class=\"token arrow operator\">--></span>C1</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>D<span class=\"token arrow operator\">--></span>C1</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>D<span class=\"token arrow operator\">--></span>D1</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>E<span class=\"token arrow operator\">--></span>D1</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>E<span class=\"token arrow operator\">--></span>E1</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>F<span class=\"token arrow operator\">--></span>E1</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>F<span class=\"token arrow operator\">--></span>F1</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>G<span class=\"token arrow operator\">--></span>F1</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>G<span class=\"token arrow operator\">--></span>G1</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>H<span class=\"token arrow operator\">--></span>G1</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>A2<span class=\"token text string\">[1,2,4,8]</span><span class=\"token arrow operator\">---</span>B2<span class=\"token text string\">[2,4,8,16]</span><span class=\"token arrow operator\">---</span>C2<span class=\"token text string\">[4,8,16,32]</span><span class=\"token arrow operator\">---</span>D2<span class=\"token text string\">[8,16,32,64]</span><span class=\"token arrow operator\">---</span>E2<span class=\"token text string\">[16,32,64,128]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>A1<span class=\"token arrow operator\">--></span>A2</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>C1<span class=\"token arrow operator\">--></span>A2</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>B1<span class=\"token arrow operator\">--></span>B2</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>D1<span class=\"token arrow operator\">--></span>B2</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>C1<span class=\"token arrow operator\">--></span>C2</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>E1<span class=\"token arrow operator\">--></span>C2</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>D1<span class=\"token arrow operator\">--></span>D2</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>F1<span class=\"token arrow operator\">--></span>D2</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>E1<span class=\"token arrow operator\">--></span>E2</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>G1<span class=\"token arrow operator\">--></span>E2</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>A3<span class=\"token text string\">[1,2,4,8,16,32,64,128]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>A2<span class=\"token arrow operator\">--></span>A3</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>E2<span class=\"token arrow operator\">--></span>A3</pre></td></tr></table></figure></li>\n</ol>\n<ul>\n<li>\n<p>朴素做法：一个个枚举区间，遍历区间中所有的结点，最后，取出最值。这样的时间复杂度计算是 —— 区间个数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>×</mo></mrow><annotation encoding=\"application/x-tex\">\\times</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">×</span></span></span></span> 区间长度 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>N</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n</li>\n<li>\n<p>倍增思想：结合二进制的思想，将朴素做法的逐个枚举，转变成每次都以 2 的指数步长递增枚举。这样可以将本次区间的最值问题转化为两个子区间的问题，类似于一个二叉树，从叶子节点向父亲传递最值。为何从叶子节点开始？因为叶子节点的区间就是自己本身，本身就是最值！所以，类比到整个区间，区间的每个结点就是叶子节点。倍增避免了众多区间有部分重合的情况和遍历每个区间的繁琐操作，也就优化了两个等级，这可以使算法的性能提升到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(Nlog(N))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span>。</p>\n</li>\n</ul>\n<h2 id=\"题目总结和心得\"><a class=\"anchor\" href=\"#题目总结和心得\">#</a> 题目总结和心得</h2>\n<ol>\n<li>2021.10.27：<a href=\"\">noi-test.zzstep.com/contest/0x00「基本算法」例题 / 0601 Genius ACM</a></li>\n</ol>\n",
            "tags": []
        }
    ]
}