{
    "version": "https://jsonfeed.org/version/1",
    "title": "无尽的博客 • All posts by \"slam\" category",
    "description": "",
    "home_page_url": "https://wzxzzy.com",
    "items": [
        {
            "id": "https://wzxzzy.com/slam/%E8%A7%86%E8%A7%89%E9%87%8C%E7%A8%8B%E8%AE%A1/",
            "url": "https://wzxzzy.com/slam/%E8%A7%86%E8%A7%89%E9%87%8C%E7%A8%8B%E8%AE%A1/",
            "title": "视觉里程计",
            "date_published": "2021-11-01T02:21:33.000Z",
            "content_html": "<h1 id=\"视觉里程计\"><a class=\"anchor\" href=\"#视觉里程计\">#</a> 视觉里程计</h1>\n<p>里程计：</p>\n<p>视觉里程计：</p>\n<p>漂移：</p>\n<p>相机模型：相机能够把三维空间中的信息变成一张二维的照片。描述它的数学模型就是相机模型。其中，针孔模型是最常用，也是最简单的相机模型。</p>\n<p>特征匹配：</p>\n<p>描述子：对于每一个特征点，为了说明它与其他点的区别，人们还使用 “描述子”（Descriptor）对它们加以描述。描述子通常是一个向量，含有特征点和周围区域的信息。如果两个特征点的描述子相似，我们就可以认为它们是同一个点。根据特征点和描述子的信息，我们可以计算出两张图像中的匹配点。</p>\n<p>估计相机运动三种情况：</p>\n<p>BA：</p>\n<p>重建：</p>\n<p>三角化：在 2D-2D 的估计下，利用相机的相对运动变化，来估测两个照片的同一物体的空位置。在原理上，只要我们在空间中的不同位置拍摄到了同一个点，就可以通过照片中的像素位置，来估计这个点在真实空间中的位置。</p>\n<p>在 SLAM 中，三角化的结果，可以视为一种地图。这样，我们建立了对地图的一种点云描述：即通过大量的空间点，来估计整个地图的样貌。这虽然是一种较粗略的描述，但我们也能看出地图里究竟有些什么东西。在特征点方法中，因为我们只重构特征点的空间位置，这种方法也常常被称为稀疏重构。</p>\n<p>直接法：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVpcGhvbmUuY29tL2NhdGVnb3J5L2FpL1FqNnVKaGF5d3BCRDh2ZHEuaHRtbA==\">参考：视觉里程计</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaXQ2MTAuY29tL2FydGljbGUvMTI4ODA4NDI2MDc4MzE3MzYzMi5odG0=\">参考：视觉里程计 2</span></p>\n",
            "tags": []
        },
        {
            "id": "https://wzxzzy.com/SLAM%E8%AE%BA%E6%96%87%E7%B2%BE%E8%AF%BB/",
            "url": "https://wzxzzy.com/SLAM%E8%AE%BA%E6%96%87%E7%B2%BE%E8%AF%BB/",
            "title": "SLAM论文精读",
            "date_published": "2021-10-31T13:04:45.000Z",
            "content_html": "<p>这篇文章整合了本人的论文阅读过程，将涉及理论分析和复现，及代码演示。最后将会对专有名词进行介绍。</p>\n<h1 id=\"slam-具体模型分类\"><a class=\"anchor\" href=\"#slam-具体模型分类\">#</a> SLAM 具体模型分类：</h1>\n<ol>\n<li>论文 1：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rLnpoaWh1LmNvbS8/dGFyZ2V0PWh0dHBzJTNBLy93d3cucmVzZWFyY2hnYXRlLm5ldC9wdWJsaWNhdGlvbi8zNDk2MTg3NTdfVmlzdWFsX2FuZF9WaXN1YWwtSW5lcnRpYWxfU0xBTV9TdGF0ZV9vZl90aGVfQXJ0X0NsYXNzaWZpY2F0aW9uX2FuZF9FeHBlcmltZW50YWxfQmVuY2htYXJraW5n\">Visual_and_Visual-Inertial_SLAM_State_of_the_Art_Classification_and_Experimental_Benchmarking</span></li>\n</ol>\n<ul>\n<li>这篇论文主题是视觉 SLAM （vSLAM）和视觉惯性 SLAM（viSLAM），在特定环境下使用增强现实的行人移动轨迹，来评估这些 SLAM。同时，这些行人写带手持智能设备，有着 6 个自由度。</li>\n</ul>\n<p>现有的标杆实验：</p>\n<ul>\n<li>分为两个部分，列出了众多论文和标杆实验基准。</li>\n</ul>\n<p>硬件和一般设计选择：</p>\n<ul>\n<li>\n<p>视觉里程计（VO）：</p>\n<blockquote>\n<p>里程计：在里程计问题中，我们希望测量一个运动物体的轨迹。这可以通过许多不同的手段来实现。例如，我们在汽车轮胎上安装计数码盘，就可以得到轮胎转动的距离，从而得到汽车的估计。或者，也可以测量汽车的速度、加速度，通过时间积分来计算它的位移。完成这种运动估计的装置（包括硬件和算法）叫做里程计（Odometry）。</p>\n<p>视觉里程计：<strong>根据拍摄图像估计相机运动</strong>。主要方式分为特征点法和直接方法。其中，特征点法目前占据主流，能够在噪声较大、相机运动较快时工作，但地图则是稀疏特征点；直接方法不需要提特征，能够建立稠密地图，但存在着计算量大、鲁棒性不好的缺陷。特征点方法也叫<strong>稀疏方法</strong>，而使用特征点描述的也叫<strong>稠密方法</strong>。</p>\n<p>漂移：里程计一个很重要的特性，是它只关心局部时间上的运动，多数时候是指两个时刻间的运动。当我们以某种间隔对时间进行采样时，就可估计运动物体在各时间间隔之内的运动。由于这个估计受噪声影响，先前时刻的估计误差，会累加到后面时间的运动之上，这种现象称为漂移（Drift）。</p>\n</blockquote>\n</li>\n<li>\n<p>先简述了 VO 和 SLAM 的关系和区别， VO 是 SLAM 的一个构件，SLAM 可以理解成是 VO 和闭环检测的整合（刨除建图的功能）。</p>\n</li>\n<li>\n<p>vSLAM 的硬件介绍：</p>\n<ol>\n<li>单目摄像机</li>\n<li>双目摄像机</li>\n<li>RGB-D 摄像机</li>\n</ol>\n</li>\n</ul>\n<p>啊</p>\n",
            "tags": []
        },
        {
            "id": "https://wzxzzy.com/slam/SLAM%E8%AE%BA%E6%96%87%E7%B2%BE%E8%AF%BB/",
            "url": "https://wzxzzy.com/slam/SLAM%E8%AE%BA%E6%96%87%E7%B2%BE%E8%AF%BB/",
            "title": "SLAM论文精读",
            "date_published": "2021-10-31T13:04:45.000Z",
            "content_html": "<p>SLAM 具体模型分类：</p>\n<p>论文：</p>\n",
            "tags": []
        },
        {
            "id": "https://wzxzzy.com/slam/SLAM%E5%8D%81%E5%9B%9B%E8%AE%B2%E7%AC%AC1-6%E7%AB%A0%E6%80%BB%E7%BB%93/",
            "url": "https://wzxzzy.com/slam/SLAM%E5%8D%81%E5%9B%9B%E8%AE%B2%E7%AC%AC1-6%E7%AB%A0%E6%80%BB%E7%BB%93/",
            "title": "SLAM十四讲第1-6章总结",
            "date_published": "2021-10-25T09:39:55.000Z",
            "content_html": "<h1 id=\"slam十四讲前三章总结\"><a class=\"anchor\" href=\"#slam十四讲前三章总结\">#</a> SLAM 十四讲前三章总结</h1>\n<h2 id=\"slam初识\"><a class=\"anchor\" href=\"#slam初识\">#</a> SLAM 初识</h2>\n<p>在学习 SLAM 之前应该具有线性代数的基础，并拥有虚拟机等模拟 Linux 的软件，并且由于 ROS 等机器人操作系统在 SLAM 领域中经常被使用，所以有一个稳定的代理能一直访问外网显得异常重要。</p>\n<p>相关的虚拟机配置将尽快做出更新（先挖个坑）。</p>\n<p>本文将梳理 SLAM 十四讲的全部内容，预计时间跨度会是两周的时间，加上网上高翔博士布置的相关作业，由于本人是刚入门的 SLAM，是边学边更新内容，后续有错误一定会随时更新博客，大佬勿喷哈。</p>\n<p>那么，接下来我将带着自己的理解，来撰写全部的全书总结。</p>\n<h2 id=\"slam第一章-第二章梳理\"><a class=\"anchor\" href=\"#slam第一章-第二章梳理\">#</a> SLAM 第一章、第二章梳理</h2>\n<p>本书在这两个章节中，简要的介绍了 SLAM 主要使用的是 C++，并适配在 Linux 系统中，编程时经常使用 CMake 工具来解决调用其他人 C++ 工程经历的冗杂导包的问题。</p>\n<p>接着深入介绍了 SLAM 主要解决的任务是<strong>机器人在实际运动中的定位问题，还有构建周边环境的问题</strong>，定位问题主要是机器人在实际运动中的路径决策问题，之前是否到达过该地点，这就像是图论问题中的搜索，机器人需要知道当前时间戳所在的位置，是否已经走过，这样可以避免在一个地方兜圈子。而建图问题就是机器人针对周边环境的识别能力。具体讲的就是，机器人是否能够通过当前环境的特征信息来识别出当前环境具体的构造，比如实际扫地机需要识别所在环境中所有的障碍物，从而实现精准避障。</p>\n<p>做个归纳：SLAM 就是解决机器人运动问题的任务。大致分为激光 SLAM 和 视觉 SLAM ，还有更多类型的分类和细节，会尽快详细更新。在以前获取周边环境信息的主流手段是激光雷达，但是最近几年随着深度学习的兴起，从经典的特征点提取到神经网络，之后再到卷积神经网络、残差网络、稠密网络和各种迁移学习所带来的特征学习难度的减小，最后到发文截至的这个时间点的 transformers，越来越多优秀的视觉模型展现出识别、检测和提取语义信息的超强能力。SLAM 也在飞速发展，这就引出了搭配相机的视觉 SLAM，还有多传感器融合，这展现出了 SLAM 的发展前景和潜力。</p>\n<h4 id=\"cmake使用如果安装了clion可能就不需要看这个了\"><a class=\"anchor\" href=\"#cmake使用如果安装了clion可能就不需要看这个了\">#</a> CMake 使用（如果安装了 CLion，可能就不需要看这个了）</h4>\n<p>首先需要清楚的是，CMake 的基本语法结构，详细 CMake 语法链接:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhaW5lR2F0ZXMvYXJ0aWNsZS9kZXRhaWxzLzEwODI0MjgwMw==\">https://blog.csdn.net/LaineGates/article/details/108242803</span></p>\n<p>我将在应用到 CMake 链接静态库和动态库时详细更新具体的书写方法（再挖个坑）。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Linux Ubantu 16.04 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 1、创建 C++ 工作区 (即工程文件夹，存放头文件、源码、数据等)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">mkdir</span> cppwork</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">cd</span> cppwork</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 2、书写 cpp 源文件 (创建文件还可以使用 touch main.cpp，可直接创建文件，但不会直接打开)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">vim</span> main.cpp</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 3、之后检查一下是否成功保存 (cat 会显示具体的文件内容)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">cat</span> main.cpp</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 4、创建 CMakeLists.txt</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">vim</span> CMakeLists.txt</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 5、创建 build 文件夹，这个文件夹用来存放 CMake 产生的附带垃圾文件</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">mkdir</span> build</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token builtin class-name\">cd</span> build</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 6、编译 CMake</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>cmake <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 7、运行 CMake</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr></table></figure><h2 id=\"slam第三章梳理\"><a class=\"anchor\" href=\"#slam第三章梳理\">#</a> SLAM 第三章梳理</h2>\n<p><img data-src=\"image-20211025203849116.png\" alt=\"image-20211025203849116\" /></p>\n<p>这里强调 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>^ = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> ^ <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">e</span></span></span></span> = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>×</mo><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">a \\times e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">e</span></span></span></span>，这个运算相当于一个向量和一个单位向量（基）做外积（即叉乘）。</p>\n<p>相当于一个反对称矩阵。</p>\n<h3 id=\"欧式变换\"><a class=\"anchor\" href=\"#欧式变换\">#</a> 欧式变换</h3>\n<p>欧式变换包括旋转和平移两个操作。</p>\n<p><img data-src=\"image-20211025205755061.png\" alt=\"image-20211025205755061\" /></p>\n<p>旋转矩阵：两个不同的坐标系基之间的乘法，所得到的是一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3\\times3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span> 的矩阵，这就代表着第一个坐标系的三个轴分别和第二个坐标系的三个轴之间的内积，也就是相应的余弦值，可以看作是 3 对旋转角。</p>\n<p>旋转矩阵的性质：行列式为 1 的正交矩阵也是一个旋转矩阵。</p>\n<p>特殊正交群：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>R</mi><mo>∈</mo><msup><mi mathvariant=\"double-struck\">R</mi><mrow><mi mathvariant=\"double-struck\">n</mi><mo>×</mo><mi mathvariant=\"double-struck\">n</mi></mrow></msup><mi mathvariant=\"normal\">∣</mi><mi>R</mi><msup><mi>R</mi><mi>T</mi></msup><mo>=</mo><mi>I</mi><mo separator=\"true\">,</mo><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><mo fence=\"true\">}</mo></mrow></mrow><annotation encoding=\"application/x-tex\">SO(n)=\n\n\\begin{Bmatrix}\n\n{R\\in\\mathbb{R^{n\\times n}}|RR^T=I, det(R)=1}\n\n\\end{Bmatrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.201331em;vertical-align:-0.3506655em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8506654999999999em;\"><span style=\"top:-3.0093345em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.771331em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3506655em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">}</span></span></span></span></span></span></span></p>\n",
            "tags": []
        }
    ]
}